name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    name: Backend (FastAPI, Poetry)
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Poetry
        run: pip install poetry
      - name: Install dependencies
        # Use --no-root because this project is not a Poetry package (no installable backend module)
        run: poetry install --no-root
      - name: Lint (black)
        run: poetry run black --check app tests
      - name: Show backend dir before DB cleanup
        run: ls -l
      - name: Clean SQLite test database
        run: rm -f backend/test.db
      - name: Show backend dir after DB cleanup
        run: ls -l
      - name: Run backend tests (pytest)
        run: PYTHONPATH=. poetry run pytest --maxfail=1 --disable-warnings --tb=short -s

  frontend:
    name: Frontend (React, Vite)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: npm ci
      - name: Lint (eslint)
        run: |
          if [ -f node_modules/.bin/eslint ]; then npm run lint || true; else echo 'No ESLint config found.'; fi
      - name: Run frontend tests (Vitest)
        run: |
          if [ -f node_modules/.bin/vitest ]; then npm run test || true; else echo 'No Vitest config found.'; fi
      - name: Build
        run: npm run build

  # Optional: Azure deployment jobs could be added here if secrets are set
  # See documentation for deployment steps.
